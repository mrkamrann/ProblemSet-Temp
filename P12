/*
Link : https://codeforces.com/contest/1924/problem/C
*/

#include <iostream>
#include <stdexcept>
#include <cassert>



long long Power(long long base, long long exponent) {
    long long result = 1;
    long long mod_value = 999999893;
    while (exponent) {
        if (exponent & 1) result = result * base % mod_value;
        base = base * base % mod_value;
        exponent >>= 1;
    }
    return result;
}

long long ProcessTestCase(long long num) {
  
    if (num < 1 || num > 1000000000) {
        throw std::invalid_argument("Invalid input: num must be between 1 and 1000000000");
    }

    num--;
    long long mod_value = 999999893;
    long long value_a = Power(2, (num + 1) / 2) - 1;
    long long value_b = Power(2, num / 2) - 1;
    long long quotient = (value_a * value_a % mod_value - (value_b + 1) * (value_b + 1) * 2 % mod_value + mod_value) % mod_value;
    return (mod_value - value_a) * Power(quotient, mod_value - 2) % mod_value;
}


#include <iostream>
#include <stdexcept>
#include <cassert>


int main() {
    std::ios::sync_with_stdio(false);
    std::cin.tie(nullptr);

    long long test_cases;
    std::cin >> test_cases;
    while (test_cases--) {
        long long num;
        std::cin >> num;
       std::cout << ProcessTestCase(num) << '\n';
        
    }

    return 0;
}
