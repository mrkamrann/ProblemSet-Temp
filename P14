/*
Link: https://codeforces.com/contest/1594/problem/F
*/

#include <iostream>
#include <stdexcept>
#include <cassert>

bool ProcessTestCase(long long total_steps, long long max_moves, long long steps_per_move) {
  
    if (total_steps < 1 || total_steps > 1000000000000000000LL) {
        throw std::invalid_argument("Invalid input: total_steps must be between 1 and 10^18");
    }
    if (max_moves < 1 || max_moves > 1000000000000000000LL || max_moves > total_steps) {
        throw std::invalid_argument("Invalid input: max_moves must be between 1 and 10^18, and less than or equal to total_steps");
    }
    if (steps_per_move < 1 || steps_per_move > 1000000000000000000LL) {
        throw std::invalid_argument("Invalid input: steps_per_move must be between 1 and 10^18");
    }

    if (total_steps == steps_per_move) {
       return 1;
    }
    if (steps_per_move > total_steps) {
        return 0;
    }
    
    long long pos_a = total_steps + steps_per_move;
    long long left = total_steps - steps_per_move + 1;
    long long right = total_steps;
    long long size = right - left + 1;
    long long part_a = 0, part_b = 0;
    long long num_moves = (total_steps / steps_per_move) * steps_per_move;
    part_b = right - num_moves + 1;
    part_a = size - part_b;

    if ((total_steps / steps_per_move) % 2 == 1) {
        pos_a -= part_b;
    } else {
        pos_a -= part_a;
    }

    if ((2 * max_moves + 1) > pos_a) {
       return 1;
      
    } 
   return 0;
}

#include <iostream>
#include <stdexcept>
#include <cassert>

int main() {
    std::ios::sync_with_stdio(false);
    std::cin.tie(nullptr);

    long long test_cases;
    std::cin >> test_cases;
    while (test_cases--) {
        long long total_steps, max_moves, steps_per_move;
        std::cin >> total_steps >> max_moves >> steps_per_move;
        ProcessTestCase(total_steps, max_moves, steps_per_move);
    }

    return 0;
}
